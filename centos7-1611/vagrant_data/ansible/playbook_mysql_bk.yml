- hosts: vagrant
  name: test-playbook
  gather_facts: no
  become: yes

  vars:
    php7_version: "7.1.4"
    mysql_version: "5.7.18"
    mysql_root_password: "admin"

  tasks:
    ## remiモジュール
    # remiリポジトリのインストール
    - name: install remi
      yum: name=http://rpms.famillecollet.com/enterprise/remi-release-7.rpm state=present

    # remiリポジトリの無効化
    - name: disabled remi repos
      replace: dest={{item}} regexp="enabled *= *1" replace="enabled=0"
      #with_items:
      #  - remi.repo
      #  - remi-safe.repo
      with_fileglob:
        - /etc/yum.repos.d/remi*.repo


    ## MySQLモジュール
    # mariaDBアンインストール
    - name: unintall mariaDB
      yum: name="mariadb-libs" state=absent

    # リポジトリのインストール
    - name: install mysql repo
      yum: name=http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm state=present

    # Ansible 用 mysql モジュールで必要なパッケージのインストール
    - name: install mysql_variables
      yum: name="MySQL-python" state=present

    # MySQLのインストール
    - name: install mysql
      yum: name={{ item }} state=present
      with_items:
        - mysql-community-server-{{mysql_version}}-1.el7
        - mysql-community-client-{{mysql_version}}-1.el7
        - mysql-community-common-{{mysql_version}}-1.el7
        - mysql-community-libs-{{mysql_version}}-1.el7

    # MySQL起動と自動起動ON
    - name: start MySQL
      service: name=mysqld state=started enabled=yes

    # ファイル存在チェック
    - name: check change password completion file
      stat: path=~/.my.cnf
      register: fm

    # 初期パスワードget
    - name: get mysql password
      shell: "grep 'password is generated' /var/log/mysqld.log | awk -F'root@localhost: ' '{print $2}' creates=/root/.my.cnf"
      register: mysql_initial_root_password
      when: not fm.stat.exists

    - debug: var=mysql_initial_root_password.stdout

    # root ユーザの初期パスワード変更
    - name: mysql root change password
      shell: |
        mysql -u root -p'{{ mysql_initial_root_password.stdout }}' --connect-expired-password -e "SET GLOBAL validate_password_length=4;"
        mysql -u root -p'{{ mysql_initial_root_password.stdout }}' --connect-expired-password -e "SET GLOBAL validate_password_policy=LOW;"
        mysql -u root -p'{{ mysql_initial_root_password.stdout }}' --connect-expired-password -e "SET PASSWORD FOR root@localhost=PASSWORD('{{mysql_root_password}}');"
      register: ret
      when: mysql_initial_root_password.stdout is defined and mysql_initial_root_password.stdout != ""

    # .my.cnf作成
    - name: /root/.my.cnf by template
      template: src=./.my.cnf.j2 dest=/root/.my.cnf owner=root group=root mode=644 force=no

    # ファイル存在チェック
    - name: check change password completion file
      stat: path=~/.my.cnf
      register: fm

    # root ユーザの初期パスワード変更
    - name: mysql root change password host all
      mysql_user: name=root password={{mysql_root_password}} host_all=yes
      when: fm.stat.exists

    - name: anonymous ユーザの削除
      mysql_user: name="" host="{{ item }}" state=absent
      with_items:
        - localhost.localdomain
        - localhost
      when: fm.stat.exists

    # my.cnfコピー
    - name: copy my.cnf
      # backupは必ずとる
      copy: src=./my.cnf dest=/etc/my.cnf backup=yes owner=root group=root mode=644
      # MySQL再起動
      notify: restart MySQL

  handlers:
    - name: restart php-fpm
      service: name=php-fpm state=restarted
    - name: restart nginx
      service: name=nginx state=restarted
    - name: restart MySQL
      service: name=mysqld state=restarted

