- hosts: vagrant
  name: test-playbook
  gather_facts: no
  become: yes

  vars:
    php7_version: "7.1.4"
    mysql_version: "5.7.18"
    mysql_root_password: "admin"


  tasks:
    ## remiモジュール
    # remiリポジトリのインストール
    - name: install remi
      yum: name=http://rpms.famillecollet.com/enterprise/remi-release-7.rpm state=present

    # remiリポジトリの無効化
    - name: disabled remi repos
      replace: dest={{item}} regexp="enabled *= *1" replace="enabled=0"
      #with_items:
      #  - remi.repo
      #  - remi-safe.repo
      with_fileglob:
        - /etc/yum.repos.d/remi*.repo

    ## nginxモジュール
    # nginxリポジトリ追加
    - name: add nginx repo
      copy: src=./nginx.repo dest=/etc/yum.repos.d/nginx.repo owner=root group=root mode=0644

    # nginxインストール
    - name: install nginx
      yum: name=nginx-1.8.1 state=present enablerepo=nginx

    # nginx起動と自動起動ON
    - name: start nginx
      service: name=nginx state=started enabled=yes

    # nginx.confコピー
    - name: copy nginx.conf
      # backupは必ずとる
      copy: src=./nginx.conf dest=/etc/nginx/nginx.conf backup=yes owner=root group=root mode=644
      # nginx再起動
      notify: restart nginx



    ## PHPモジュール
    # PHPインストール
    - name: install php
      yum: name={{ item }} state=present enablerepo=remi,remi-php71,epel
      with_items:
        - php-cli-{{ php7_version }}
        - php-common-{{ php7_version }}
        - php-dba-{{ php7_version }}
        - php-devel-{{ php7_version }}
        - php-fpm-{{ php7_version }}
        - php-gd-{{ php7_version }}
        - php-gmp-{{ php7_version }}
        - php-intl-{{ php7_version }}
        - php-mbstring-{{ php7_version }}
        - php-mcrypt-{{ php7_version }}
        - php-mysqlnd-{{ php7_version }}
        - php-opcache-{{ php7_version }}
        - php-pdo-{{ php7_version }}
        - php-process-{{ php7_version }}
        - php-soap-{{ php7_version }}
        - php-xml-{{ php7_version }}
        - php-xmlrpc-{{ php7_version }}

    # PHP系モジュールインストール
    - name: install php modules
      yum: name={{ item }} state=present enablerepo=remi,remi-php71,epel
      with_items:
        - php-pear
        - php-pecl-apcu
        - php-pecl-jsonc
        - php-pecl-memcached
        - php-pecl-redis

    # php.iniコピー
    - name: copy php.ini
      # backupは必ずとる
      copy: src=./php.ini dest=/etc/php.ini backup=yes owner=root group=root mode=644

    ## php-fpmモジュール
    # php-fpm起動と自動起動ON
    - name: start php-fpm
      service: name=php-fpm state=started enabled=yes

    # php-fpm.conf、www.confコピー
    - name: copy php-fpm config files
      # backupは必ずとる
      copy: src={{ item.src }} dest={{ item.desc }} backup=yes owner=root group=root mode=644
      # php-fpm再起動
      notify: restart php-fpm
      with_items:
        - { src: ./php-fpm.conf, desc: /etc/php-fpm.conf }
        - { src: ./www.conf, desc: /etc/php-fpm.d/www.conf }



    ## webアプリケーションセットアップモジュール
    # nginxセットアップ
    - name: copy default.conf
      # backupは必ずとる
      copy: src=./default.conf dest=/etc/nginx/conf.d/default.conf backup=yes owner=root group=root mode=644
      # nginx再起動
      notify: restart nginx


    ## MySQLモジュール
    # mariaDBアンインストール
    - name: unintall mariaDB
      yum: name="mariadb-libs" state=absent

    # リポジトリのインストール
    - name: install mysql repo
      yum: name=http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm state=present

    # Ansible 用 mysql モジュールで必要なパッケージのインストール
    - name: install mysql_variables
      yum: name="MySQL-python" state=present

    # MySQLのインストール
    - name: install mysql
      yum: name={{ item }} state=present
      with_items:
        - mysql-community-server-{{mysql_version}}
        - mysql-community-client-{{mysql_version}}
        - mysql-community-common-{{mysql_version}}
        - mysql-community-libs-{{mysql_version}}

    # MySQL起動と自動起動ON
    - name: start MySQL
      service: name=mysqld state=started enabled=yes

    # ファイル存在チェック
    - name: check change password completion file
      stat: path=~/.my.cnf
      register: fm

    # 初期パスワードget
    - name: get mysql password
      shell: "grep 'password is generated' /var/log/mysqld.log | awk -F'root@localhost: ' '{print $2}' creates=/root/.my.cnf"
      register: mysql_initial_root_password
      when: not fm.stat.exists

    - debug: var=mysql_initial_root_password.stdout

    # root ユーザの初期パスワード変更
    - name: mysql root change password
      shell: |
        mysql -u root -p'{{ mysql_initial_root_password.stdout }}' --connect-expired-password -e "SET GLOBAL validate_password_length=4;"
        mysql -u root -p'{{ mysql_initial_root_password.stdout }}' --connect-expired-password -e "SET GLOBAL validate_password_policy=LOW;"
        mysql -u root -p'{{ mysql_initial_root_password.stdout }}' --connect-expired-password -e "SET PASSWORD FOR root@localhost=PASSWORD('{{mysql_root_password}}');"
      register: ret
      when: mysql_initial_root_password.stdout is defined and mysql_initial_root_password.stdout != ""

    # .my.cnf作成
    - name: /root/.my.cnf by template
      template: src=./.my.cnf.j2 dest=/root/.my.cnf owner=root group=root mode=644 force=no

    # ファイル存在チェック
    - name: check change password completion file
      stat: path=~/.my.cnf
      register: fm

    # root ユーザの初期パスワード変更
    - name: mysql root change password host all
      mysql_user: name=root password={{mysql_root_password}} host_all=yes
      when: fm.stat.exists

    - name: anonymous ユーザの削除
      mysql_user: name="" host="{{ item }}" state=absent
      with_items:
        - localhost.localdomain
        - localhost
      when: fm.stat.exists

    # my.cnfコピー
    - name: copy my.cnf
      # backupは必ずとる
      copy: src=./my.cnf dest=/etc/my.cnf backup=yes owner=root group=root mode=644
      # MySQL再起動
      notify: restart MySQL

    # memcachedインストール
    - name: install memcached
      yum: name=memcached state=present enablerepo=remi

    # memcached起動と自動起動ON
    - name: start memcached
      service: name=memcached state=started enabled=yes

  handlers:
    - name: restart php-fpm
      service: name=php-fpm state=restarted
    - name: restart nginx
      service: name=nginx state=restarted
    - name: restart MySQL
      service: name=mysqld state=restarted

